###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- hosts: vms
  gather_facts: false
  connection: local
  user: remote
  become: true

  vars_files:
    - ../group_vars/vars
    - ../group_vars/vault

  environment: "{{ env }}"

  tasks:
    - name: Create VMs without a data drive
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        esxi_hostname: "{{ esxi_host }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm{{ folder_name }}"
        name: "{{ inventory_hostname }}"
        template: "{{ vm_template }}"
        state: poweredon
        networks:
          - name: "{{ vm_portgroup }}"
            ip: "{{ ip_addr | ipaddr('address') }}"
            netmask: "{{ ip_addr | ipaddr('netmask') }}"
            gateway: "{{ gateway }}"
        customization:
          dns_servers: "{{ dns }}"
          domain: "{{ domain_name }}"
#          hostname: "{{ inventory_hostname }}.{{ domain_name }}"
        disk:
          - size_gb:  "{{ disk1_size }}"
            type: thin
            datastore: "{{ datastores | random }}"
        hardware:
          memory_mb: "{{ ram }}"
          num_cpus: "{{ cpus }}"
#        wait_for_ip_address: yes
      when: disk2_size is undefined
      notify: CreateVMsWait

    - name: Create VMs with a data drive
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        esxi_hostname: "{{ esxi_host }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm{{ folder_name }}"
        name: "{{ inventory_hostname }}"
        template: "{{ vm_template }}"
        state: poweredon
        networks:
          - name: "{{ vm_portgroup }}"
            ip: "{{ ip_addr | ipaddr('address') }}"
            netmask: "{{ ip_addr | ipaddr('netmask') }}"
            gateway: "{{ gateway }}"
        customization:
          dns_servers: "{{ dns }}"
          domain: "{{ domain_name }}"
#          hostname: "{{ inventory_hostname }}.{{ domain_name }}"
        disk:
          - size_gb:  "{{ disk1_size }}"
            type: thin
            datastore: "{{ datastore }}"
          - size_gb:   "{{ disk2_size }}" 
            type: thin
            datastore: "{{ datastore }}"
        hardware:
          memory_mb: "{{ ram }}"
          num_cpus: "{{ cpus }}"
#        wait_for_ip_address: yes
      vars:
          datastore: "{{ datastores | random }}"
      when: disk2_size is defined
      notify: CreateVMsWait

  handlers:
    - name: CreateVMsWait
      wait_for_connection:
        delay: 120
        timeout: 300
