###
# Copyright (2017) Hewlett Packard Enterprise Development LP
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
### 
---
- hosts: vms
  name: Delete VMs
  gather_facts: false
  connection: local

  environment:
    - "{{ env }}"

  tasks:
    - name: Power off VMs
      delegate_to: localhost
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        esxi_hostname: "{{ esxi_host }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm{{ folder_name }}"
        name: "{{ inventory_hostname }}"
        state: poweredoff
      failed_when: false

    - name: Delete VMs
      delegate_to: localhost
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        esxi_hostname: "{{ esxi_host }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm{{ folder_name }}"
        name: "{{ inventory_hostname }}"
        disk: "{{ disks_specs }}"
        state: absent
      vars:
        ansible_connection: local

#############################################################################xxx
# 
# play 2: SimpliVity Specific, delete Dummy VMs and backup policies
#
################################################################################

- hosts: localhost
  gather_facts: false
  name: Cleanup SimpliVity Specific
  connection: local

  environment:
    - "{{ env }}"

  tasks:
  - block:
    - name: Build the list of Dummy VM names
      set_fact: dummy_vms="{{ dummy_vms | default([]) + [ prefix+'-in-dockvols-'+item  ] }}"
      vars:
        prefix: "{{ dummy_vm_prefix }}"
      with_items:
        - "{{ datastores }}"

    - name: Power off Dummy VMs
      delegate_to: localhost
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm{{ folder_name }}"
        name: "{{ item }}"
        state: poweredoff
      with_items: "{{ dummy_vms }}"
      failed_when: false

    - name: Delete  Dummy VMs
      delegate_to: localhost
      vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: "{{ vcenter_validate_certs }}"
        datacenter: "{{ datacenter }}"
        folder: "{{ datacenter }}/vm{{ folder_name }}"
        name: "{{ item }}"
        state: absent
      with_items: "{{ dummy_vms }}"
    when: svt_cleanup is defined and svt_cleanup

#############################################################################xxx
# 
# play 3: Cleanup Baremetal Server
#
################################################################################
- name: Decommission Baremetal Server
  hosts: bms
  gather_facts: false
  connection: local

  environment: 
    - "{{ env }}"

  tasks:

    - debug: msg="{{ inventory_hostname }} {{ ip_addr }} enc:{{ enclosure }} tpl:{{ ov_template }} osdp:{{ ov_osdp }}"

    - name: Gather facts about a Server Profile by name
      oneview_server_profile_facts:
        hostname: "{{ oneview_config_hostname }}"
        username: "{{ oneview_config_username }}"
        password: "{{ oneview_config_password }}"
        api_version: "{{ oneview_config_api_version }}"
        name: "{{ inventory_hostname }}"
      delegate_to: localhost

    - name: Power Off the server hardware
      when: server_profiles | length > 0
      oneview_server_hardware:
        hostname: "{{ oneview_config_hostname }}"
        username: "{{ oneview_config_username }}"
        password: "{{ oneview_config_password }}"
        api_version: "{{ oneview_config_api_version }}"
        state: power_state_set
        data:
            name : '{{ enclosure }}, bay {{ server_profiles[0].enclosureBay }}'
            powerStateData:
                powerState: "Off"
                powerControl: "PressAndHold"
      delegate_to: localhost

    - name: Gather facts about server hardware
      when: server_profiles | length > 0
      oneview_server_hardware_facts:
        hostname: "{{ oneview_config_hostname }}"
        username: "{{ oneview_config_username }}"
        password: "{{ oneview_config_password }}"
        api_version: "{{ oneview_config_api_version }}"
        name: "{{ enclosure }}, bay {{ server_profiles[0].enclosureBay }}"
      delegate_to: localhost

    - debug: var=server_hardware.powerState
      when: server_profiles | length > 0

    - name: Delete the Server Profile If it exists
      when: server_profiles | length > 0
      oneview_server_profile:
        hostname: "{{ oneview_config_hostname }}"
        username: "{{ oneview_config_username }}"
        password: "{{ oneview_config_password }}"
        api_version: "{{ oneview_config_api_version }}"
        state: "absent"
        data:
          name: "{{ inventory_hostname }}"
      delegate_to: localhost
      register: result

    - debug: msg="{{ result.msg }}"
      when: server_profiles | length > 0
